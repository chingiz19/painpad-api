type Query {
  isLogin: AuthRes!
  isAdmin: Boolean!
  locations(text: String!, limit: Int!): [Pair!]!
  industries(text: String!, limit: Int!): [Pair!]!
  occupations(text: String!, limit: Int!): [Pair!]!
  signin(email: String!, pwd: String!): Boolean!
  userProfile(userId: ID!): Profile!
  userStats(userId: ID!): UserStats!
  posts(userId: ID, topicId: ID, lastDate: Float, count: Int): [Post]!
  signout: Boolean!
  signS3(fileName: String!, fileType: String!): S3Response!
  userPendingPosts: [PendingPost]!
  sameHereUsers(postId: ID!): [ShortUser]!
  adminPendingPosts: [PendingPost]!
  adminAllTopics: [Topic]!
  adminGetRejectReasons: [Pair!]!
  topicStats(topicId: ID!): TopicStats!
  notificationCount: Int!
  notifications(limit: Int): [Notification!]!
}

type Mutation {
  signup(
    firstName: String!
    lastName: String!
    email: String!
    pwd: String!
    cityId: ID!
    industryId: ID!
  ): Boolean!
  changeProfile(
    firstName: String
    lastName: String
    occupationId: ID
    locationId: ID
    industryId: ID
    profilePic: String
  ): Boolean!
  follow(userIdToFollow: ID!): Boolean!
  unFollow(userIdToUnFollow: ID!): Boolean!
  changePwd(oldPwd: String!, newPwd: String!): Boolean!
  forgotPwd(email: String!): Boolean!
  resetPwd(newPwd: String!, token: String!): Boolean!
  post(description: String!, cityId: ID!, industryId: ID!): Boolean!
  sameHere(postId: ID!, add: Boolean!): Boolean!
  removePost(postId: ID!): Boolean!
  adminAddTopic(name: String!): ID!
  adminAddSubTopic(name: String!, topicId: ID!): ID!
  adminApprovePost(postId: ID!, subTopicId: ID!): Boolean!
  adminAddRejectReason(reason: String!): ID!
  adminRejectPost(
    postId: ID!
    reasonId: ID!
    explanation: String
    suggestion: String
  ): Boolean!
}

type Subscription {
  newPost: Post!
  notificationCount: Int!
}

type Topic {
  id: ID!
  name: String!
  subs: [subTopic!]!
}

type subTopic {
  id: ID
  description: String
  topicId: ID
}

type Profile {
  self: Boolean!
  user: User!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  emailVerified: Boolean!
  profilePic: String!
  occupation: Pair!
  industry: Pair!
  location: Pair!
  since: Float!
  score: Int!
}

type UserStats {
  following: [ShortUser]!
  followers: [ShortUser]!
}

type ShortUser {
  id: ID!
  firstName: String!
  lastName: String!
  profilePic: String!
  industry: String!
  occupation: String
}

type Post {
  id: ID!
  description: String!
  postedBy: ShortUser!
  created: Float!
  industry: String!
  location: String!
  approved: Float!
  topic: Topic!
  sameHere: Int!
  sameHered: Boolean!
}

type PendingPost {
  id: ID!
  description: String!
  postedBy: ShortUser!
  created: Float!
  industry: String!
  location: String!
}

type Pair {
  id: ID!
  value: String!
}

type Notification {
  id: ID!
  descrption: String!
  created: Float!
  action: String!
  icon: String!
}

type AuthRes {
  success: Boolean
  id: ID!
}

type S3Response {
  uploadUrl: String!
  fileUrl: String!
}

type TopicStats {
  topicName: String!
  weights: TopicWeights!
  subTopicStats: [SubTopicStats!]!
  topicCountryStats: [TopicCountryStats!]!
}

type SubTopicStats {
  subTopicId: ID!
  subTopicName: String!
  sameHereCount: Float!
  userPoints: Float!
  postCount: Float!
}

type TopicCountryStats {
  countryId: ID!
  countryName: String!
  postCount: Int!
  sameHereCount: Float!
}

type TopicWeights {
  subTopicWeights: subTopicWeights!
  countryWeights: countryWeights!
}

type subTopicWeights {
  postCount: Float!
  userPoint: Float!
  sameHere: Float!
}

type countryWeights {
  postCount: Float!
  sameHere: Float!
}
